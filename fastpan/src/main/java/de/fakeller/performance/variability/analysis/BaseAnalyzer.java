package de.fakeller.performance.variability.analysis;

import de.fakeller.performance.analysis.AnalysisCapability;
import de.fakeller.performance.analysis.AnalysisContext;
import de.fakeller.performance.analysis.PerformanceAnalyzer;
import de.fakeller.performance.analysis.result.PerformanceResult;
import de.fakeller.performance.variability.SystemProvider;
import de.fakeller.performance.variability.VariabilityAnalyzer;
import de.fakeller.performance.variability.configuration.ConfigurationProvider;

import java.util.Set;

/**
 * This analyzer executes a {@link PerformanceAnalyzer} for all system configurations.
 * <p>
 * This analyzer provides the following results:
 * - access to all {@link PerformanceResult}s generated by the {@link PerformanceAnalyzer}
 */
public class BaseAnalyzer<SYSTEM, FEATURE> implements VariabilityAnalyzer<SYSTEM, BaseContext<SYSTEM, FEATURE>, FEATURE> {

    private final PerformanceAnalyzer<SYSTEM, AnalysisContext<SYSTEM>> analyzer;

    public BaseAnalyzer(final PerformanceAnalyzer<SYSTEM, AnalysisContext<SYSTEM>> analyzer) {
        this.analyzer = analyzer;
    }

    @Override
    public Set<AnalysisCapability> capabilities() {
        return this.analyzer.capabilities();
    }

    @Override
    public BaseContext<SYSTEM, FEATURE> setupAnalysis(final ConfigurationProvider<FEATURE> configurationProvider, final SystemProvider<SYSTEM, FEATURE> systemProvider) {
        return new BaseContext<>(configurationProvider, systemProvider, this.analyzer);
    }
}
