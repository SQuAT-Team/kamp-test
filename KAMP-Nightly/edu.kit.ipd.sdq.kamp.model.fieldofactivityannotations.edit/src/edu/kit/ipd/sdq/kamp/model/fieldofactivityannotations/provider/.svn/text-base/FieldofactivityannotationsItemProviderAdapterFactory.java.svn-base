/**
 */
package edu.kit.ipd.sdq.kamp.model.fieldofactivityannotations.provider;

import edu.kit.ipd.sdq.kamp.model.fieldofactivityannotations.util.FieldofactivityannotationsAdapterFactory;

import java.util.ArrayList;
import java.util.Collection;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITableItemLabelProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class FieldofactivityannotationsItemProviderAdapterFactory extends FieldofactivityannotationsAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
	/**
	 * This keeps track of the root adapter factory that delegates to this adapter factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
	 * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
	 * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Collection<Object> supportedTypes = new ArrayList<Object>();

	/**
	 * This constructs an instance.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public FieldofactivityannotationsItemProviderAdapterFactory() {
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IItemPropertySource.class);
		supportedTypes.add(ITableItemLabelProvider.class);
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.kit.ipd.sdq.kamp.model.fieldofactivityannotations.FieldOfActivityAnnotationRepository} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FieldOfActivityAnnotationRepositoryItemProvider fieldOfActivityAnnotationRepositoryItemProvider;

	/**
	 * This creates an adapter for a {@link edu.kit.ipd.sdq.kamp.model.fieldofactivityannotations.FieldOfActivityAnnotationRepository}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFieldOfActivityAnnotationRepositoryAdapter() {
		if (fieldOfActivityAnnotationRepositoryItemProvider == null) {
			fieldOfActivityAnnotationRepositoryItemProvider = new FieldOfActivityAnnotationRepositoryItemProvider(this);
		}

		return fieldOfActivityAnnotationRepositoryItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.kit.ipd.sdq.kamp.model.fieldofactivityannotations.DevelopmentArtefactSpecification} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DevelopmentArtefactSpecificationItemProvider developmentArtefactSpecificationItemProvider;

	/**
	 * This creates an adapter for a {@link edu.kit.ipd.sdq.kamp.model.fieldofactivityannotations.DevelopmentArtefactSpecification}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDevelopmentArtefactSpecificationAdapter() {
		if (developmentArtefactSpecificationItemProvider == null) {
			developmentArtefactSpecificationItemProvider = new DevelopmentArtefactSpecificationItemProvider(this);
		}

		return developmentArtefactSpecificationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.kit.ipd.sdq.kamp.model.fieldofactivityannotations.SourceFile} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SourceFileItemProvider sourceFileItemProvider;

	/**
	 * This creates an adapter for a {@link edu.kit.ipd.sdq.kamp.model.fieldofactivityannotations.SourceFile}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSourceFileAdapter() {
		if (sourceFileItemProvider == null) {
			sourceFileItemProvider = new SourceFileItemProvider(this);
		}

		return sourceFileItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.kit.ipd.sdq.kamp.model.fieldofactivityannotations.SourceFileAggregation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SourceFileAggregationItemProvider sourceFileAggregationItemProvider;

	/**
	 * This creates an adapter for a {@link edu.kit.ipd.sdq.kamp.model.fieldofactivityannotations.SourceFileAggregation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSourceFileAggregationAdapter() {
		if (sourceFileAggregationItemProvider == null) {
			sourceFileAggregationItemProvider = new SourceFileAggregationItemProvider(this);
		}

		return sourceFileAggregationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.kit.ipd.sdq.kamp.model.fieldofactivityannotations.MetadataFile} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MetadataFileItemProvider metadataFileItemProvider;

	/**
	 * This creates an adapter for a {@link edu.kit.ipd.sdq.kamp.model.fieldofactivityannotations.MetadataFile}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMetadataFileAdapter() {
		if (metadataFileItemProvider == null) {
			metadataFileItemProvider = new MetadataFileItemProvider(this);
		}

		return metadataFileItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.kit.ipd.sdq.kamp.model.fieldofactivityannotations.MetadataFileAggregation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MetadataFileAggregationItemProvider metadataFileAggregationItemProvider;

	/**
	 * This creates an adapter for a {@link edu.kit.ipd.sdq.kamp.model.fieldofactivityannotations.MetadataFileAggregation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMetadataFileAggregationAdapter() {
		if (metadataFileAggregationItemProvider == null) {
			metadataFileAggregationItemProvider = new MetadataFileAggregationItemProvider(this);
		}

		return metadataFileAggregationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.kit.ipd.sdq.kamp.model.fieldofactivityannotations.BuildSpecification} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BuildSpecificationItemProvider buildSpecificationItemProvider;

	/**
	 * This creates an adapter for a {@link edu.kit.ipd.sdq.kamp.model.fieldofactivityannotations.BuildSpecification}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBuildSpecificationAdapter() {
		if (buildSpecificationItemProvider == null) {
			buildSpecificationItemProvider = new BuildSpecificationItemProvider(this);
		}

		return buildSpecificationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.kit.ipd.sdq.kamp.model.fieldofactivityannotations.BuildConfiguration} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BuildConfigurationItemProvider buildConfigurationItemProvider;

	/**
	 * This creates an adapter for a {@link edu.kit.ipd.sdq.kamp.model.fieldofactivityannotations.BuildConfiguration}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBuildConfigurationAdapter() {
		if (buildConfigurationItemProvider == null) {
			buildConfigurationItemProvider = new BuildConfigurationItemProvider(this);
		}

		return buildConfigurationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.kit.ipd.sdq.kamp.model.fieldofactivityannotations.ThirdPartyComponentOrLibrary} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ThirdPartyComponentOrLibraryItemProvider thirdPartyComponentOrLibraryItemProvider;

	/**
	 * This creates an adapter for a {@link edu.kit.ipd.sdq.kamp.model.fieldofactivityannotations.ThirdPartyComponentOrLibrary}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createThirdPartyComponentOrLibraryAdapter() {
		if (thirdPartyComponentOrLibraryItemProvider == null) {
			thirdPartyComponentOrLibraryItemProvider = new ThirdPartyComponentOrLibraryItemProvider(this);
		}

		return thirdPartyComponentOrLibraryItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.kit.ipd.sdq.kamp.model.fieldofactivityannotations.TestSpecification} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TestSpecificationItemProvider testSpecificationItemProvider;

	/**
	 * This creates an adapter for a {@link edu.kit.ipd.sdq.kamp.model.fieldofactivityannotations.TestSpecification}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTestSpecificationAdapter() {
		if (testSpecificationItemProvider == null) {
			testSpecificationItemProvider = new TestSpecificationItemProvider(this);
		}

		return testSpecificationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.kit.ipd.sdq.kamp.model.fieldofactivityannotations.ReleaseSpecification} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ReleaseSpecificationItemProvider releaseSpecificationItemProvider;

	/**
	 * This creates an adapter for a {@link edu.kit.ipd.sdq.kamp.model.fieldofactivityannotations.ReleaseSpecification}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createReleaseSpecificationAdapter() {
		if (releaseSpecificationItemProvider == null) {
			releaseSpecificationItemProvider = new ReleaseSpecificationItemProvider(this);
		}

		return releaseSpecificationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.kit.ipd.sdq.kamp.model.fieldofactivityannotations.ReleaseConfiguration} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ReleaseConfigurationItemProvider releaseConfigurationItemProvider;

	/**
	 * This creates an adapter for a {@link edu.kit.ipd.sdq.kamp.model.fieldofactivityannotations.ReleaseConfiguration}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createReleaseConfigurationAdapter() {
		if (releaseConfigurationItemProvider == null) {
			releaseConfigurationItemProvider = new ReleaseConfigurationItemProvider(this);
		}

		return releaseConfigurationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.kit.ipd.sdq.kamp.model.fieldofactivityannotations.DeploymentSpecification} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DeploymentSpecificationItemProvider deploymentSpecificationItemProvider;

	/**
	 * This creates an adapter for a {@link edu.kit.ipd.sdq.kamp.model.fieldofactivityannotations.DeploymentSpecification}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDeploymentSpecificationAdapter() {
		if (deploymentSpecificationItemProvider == null) {
			deploymentSpecificationItemProvider = new DeploymentSpecificationItemProvider(this);
		}

		return deploymentSpecificationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.kit.ipd.sdq.kamp.model.fieldofactivityannotations.RuntimeInstance} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RuntimeInstanceItemProvider runtimeInstanceItemProvider;

	/**
	 * This creates an adapter for a {@link edu.kit.ipd.sdq.kamp.model.fieldofactivityannotations.RuntimeInstance}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRuntimeInstanceAdapter() {
		if (runtimeInstanceItemProvider == null) {
			runtimeInstanceItemProvider = new RuntimeInstanceItemProvider(this);
		}

		return runtimeInstanceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.kit.ipd.sdq.kamp.model.fieldofactivityannotations.RuntimeInstanceAggregation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RuntimeInstanceAggregationItemProvider runtimeInstanceAggregationItemProvider;

	/**
	 * This creates an adapter for a {@link edu.kit.ipd.sdq.kamp.model.fieldofactivityannotations.RuntimeInstanceAggregation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRuntimeInstanceAggregationAdapter() {
		if (runtimeInstanceAggregationItemProvider == null) {
			runtimeInstanceAggregationItemProvider = new RuntimeInstanceAggregationItemProvider(this);
		}

		return runtimeInstanceAggregationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.kit.ipd.sdq.kamp.model.fieldofactivityannotations.UnitTestCase} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected UnitTestCaseItemProvider unitTestCaseItemProvider;

	/**
	 * This creates an adapter for a {@link edu.kit.ipd.sdq.kamp.model.fieldofactivityannotations.UnitTestCase}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createUnitTestCaseAdapter() {
		if (unitTestCaseItemProvider == null) {
			unitTestCaseItemProvider = new UnitTestCaseItemProvider(this);
		}

		return unitTestCaseItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.kit.ipd.sdq.kamp.model.fieldofactivityannotations.AcceptanceTestCase} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AcceptanceTestCaseItemProvider acceptanceTestCaseItemProvider;

	/**
	 * This creates an adapter for a {@link edu.kit.ipd.sdq.kamp.model.fieldofactivityannotations.AcceptanceTestCase}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAcceptanceTestCaseAdapter() {
		if (acceptanceTestCaseItemProvider == null) {
			acceptanceTestCaseItemProvider = new AcceptanceTestCaseItemProvider(this);
		}

		return acceptanceTestCaseItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.kit.ipd.sdq.kamp.model.fieldofactivityannotations.IntegrationTestCase} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IntegrationTestCaseItemProvider integrationTestCaseItemProvider;

	/**
	 * This creates an adapter for a {@link edu.kit.ipd.sdq.kamp.model.fieldofactivityannotations.IntegrationTestCase}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createIntegrationTestCaseAdapter() {
		if (integrationTestCaseItemProvider == null) {
			integrationTestCaseItemProvider = new IntegrationTestCaseItemProvider(this);
		}

		return integrationTestCaseItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.kit.ipd.sdq.kamp.model.fieldofactivityannotations.UnitTestCaseAggregation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected UnitTestCaseAggregationItemProvider unitTestCaseAggregationItemProvider;

	/**
	 * This creates an adapter for a {@link edu.kit.ipd.sdq.kamp.model.fieldofactivityannotations.UnitTestCaseAggregation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createUnitTestCaseAggregationAdapter() {
		if (unitTestCaseAggregationItemProvider == null) {
			unitTestCaseAggregationItemProvider = new UnitTestCaseAggregationItemProvider(this);
		}

		return unitTestCaseAggregationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.kit.ipd.sdq.kamp.model.fieldofactivityannotations.AcceptanceTestCaseAggregation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AcceptanceTestCaseAggregationItemProvider acceptanceTestCaseAggregationItemProvider;

	/**
	 * This creates an adapter for a {@link edu.kit.ipd.sdq.kamp.model.fieldofactivityannotations.AcceptanceTestCaseAggregation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAcceptanceTestCaseAggregationAdapter() {
		if (acceptanceTestCaseAggregationItemProvider == null) {
			acceptanceTestCaseAggregationItemProvider = new AcceptanceTestCaseAggregationItemProvider(this);
		}

		return acceptanceTestCaseAggregationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.kit.ipd.sdq.kamp.model.fieldofactivityannotations.IntegrationTestCaseAggregation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IntegrationTestCaseAggregationItemProvider integrationTestCaseAggregationItemProvider;

	/**
	 * This creates an adapter for a {@link edu.kit.ipd.sdq.kamp.model.fieldofactivityannotations.IntegrationTestCaseAggregation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createIntegrationTestCaseAggregationAdapter() {
		if (integrationTestCaseAggregationItemProvider == null) {
			integrationTestCaseAggregationItemProvider = new IntegrationTestCaseAggregationItemProvider(this);
		}

		return integrationTestCaseAggregationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.kit.ipd.sdq.kamp.model.fieldofactivityannotations.StaffSpecification} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected StaffSpecificationItemProvider staffSpecificationItemProvider;

	/**
	 * This creates an adapter for a {@link edu.kit.ipd.sdq.kamp.model.fieldofactivityannotations.StaffSpecification}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createStaffSpecificationAdapter() {
		if (staffSpecificationItemProvider == null) {
			staffSpecificationItemProvider = new StaffSpecificationItemProvider(this);
		}

		return staffSpecificationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.kit.ipd.sdq.kamp.model.fieldofactivityannotations.PersonList} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PersonListItemProvider personListItemProvider;

	/**
	 * This creates an adapter for a {@link edu.kit.ipd.sdq.kamp.model.fieldofactivityannotations.PersonList}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPersonListAdapter() {
		if (personListItemProvider == null) {
			personListItemProvider = new PersonListItemProvider(this);
		}

		return personListItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.kit.ipd.sdq.kamp.model.fieldofactivityannotations.Person} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PersonItemProvider personItemProvider;

	/**
	 * This creates an adapter for a {@link edu.kit.ipd.sdq.kamp.model.fieldofactivityannotations.Person}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPersonAdapter() {
		if (personItemProvider == null) {
			personItemProvider = new PersonItemProvider(this);
		}

		return personItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.kit.ipd.sdq.kamp.model.fieldofactivityannotations.RoleList} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RoleListItemProvider roleListItemProvider;

	/**
	 * This creates an adapter for a {@link edu.kit.ipd.sdq.kamp.model.fieldofactivityannotations.RoleList}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRoleListAdapter() {
		if (roleListItemProvider == null) {
			roleListItemProvider = new RoleListItemProvider(this);
		}

		return roleListItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.kit.ipd.sdq.kamp.model.fieldofactivityannotations.Developer} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DeveloperItemProvider developerItemProvider;

	/**
	 * This creates an adapter for a {@link edu.kit.ipd.sdq.kamp.model.fieldofactivityannotations.Developer}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDeveloperAdapter() {
		if (developerItemProvider == null) {
			developerItemProvider = new DeveloperItemProvider(this);
		}

		return developerItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.kit.ipd.sdq.kamp.model.fieldofactivityannotations.BuildConfigurator} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BuildConfiguratorItemProvider buildConfiguratorItemProvider;

	/**
	 * This creates an adapter for a {@link edu.kit.ipd.sdq.kamp.model.fieldofactivityannotations.BuildConfigurator}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBuildConfiguratorAdapter() {
		if (buildConfiguratorItemProvider == null) {
			buildConfiguratorItemProvider = new BuildConfiguratorItemProvider(this);
		}

		return buildConfiguratorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.kit.ipd.sdq.kamp.model.fieldofactivityannotations.TestDeveloper} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TestDeveloperItemProvider testDeveloperItemProvider;

	/**
	 * This creates an adapter for a {@link edu.kit.ipd.sdq.kamp.model.fieldofactivityannotations.TestDeveloper}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTestDeveloperAdapter() {
		if (testDeveloperItemProvider == null) {
			testDeveloperItemProvider = new TestDeveloperItemProvider(this);
		}

		return testDeveloperItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.kit.ipd.sdq.kamp.model.fieldofactivityannotations.Tester} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TesterItemProvider testerItemProvider;

	/**
	 * This creates an adapter for a {@link edu.kit.ipd.sdq.kamp.model.fieldofactivityannotations.Tester}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTesterAdapter() {
		if (testerItemProvider == null) {
			testerItemProvider = new TesterItemProvider(this);
		}

		return testerItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.kit.ipd.sdq.kamp.model.fieldofactivityannotations.ReleaseConfigurator} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ReleaseConfiguratorItemProvider releaseConfiguratorItemProvider;

	/**
	 * This creates an adapter for a {@link edu.kit.ipd.sdq.kamp.model.fieldofactivityannotations.ReleaseConfigurator}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createReleaseConfiguratorAdapter() {
		if (releaseConfiguratorItemProvider == null) {
			releaseConfiguratorItemProvider = new ReleaseConfiguratorItemProvider(this);
		}

		return releaseConfiguratorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.kit.ipd.sdq.kamp.model.fieldofactivityannotations.Deployer} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DeployerItemProvider deployerItemProvider;

	/**
	 * This creates an adapter for a {@link edu.kit.ipd.sdq.kamp.model.fieldofactivityannotations.Deployer}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDeployerAdapter() {
		if (deployerItemProvider == null) {
			deployerItemProvider = new DeployerItemProvider(this);
		}

		return deployerItemProvider;
	}

	/**
	 * This returns the root adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public ComposeableAdapterFactory getRootAdapterFactory() {
		return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
	}

	/**
	 * This sets the composed adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
		this.parentAdapterFactory = parentAdapterFactory;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean isFactoryForType(Object type) {
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

	/**
	 * This implementation substitutes the factory itself as the key for the adapter.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter adapt(Notifier notifier, Object type) {
		return super.adapt(notifier, this);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object adapt(Object object, Object type) {
		if (isFactoryForType(type)) {
			Object adapter = super.adapt(object, type);
			if (!(type instanceof Class<?>) || (((Class<?>)type).isInstance(adapter))) {
				return adapter;
			}
		}

		return null;
	}

	/**
	 * This adds a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void addListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.addListener(notifyChangedListener);
	}

	/**
	 * This removes a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void removeListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.removeListener(notifyChangedListener);
	}

	/**
	 * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void fireNotifyChanged(Notification notification) {
		changeNotifier.fireNotifyChanged(notification);

		if (parentAdapterFactory != null) {
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

	/**
	 * This disposes all of the item providers created by this factory. 
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void dispose() {
		if (fieldOfActivityAnnotationRepositoryItemProvider != null) fieldOfActivityAnnotationRepositoryItemProvider.dispose();
		if (developmentArtefactSpecificationItemProvider != null) developmentArtefactSpecificationItemProvider.dispose();
		if (sourceFileItemProvider != null) sourceFileItemProvider.dispose();
		if (sourceFileAggregationItemProvider != null) sourceFileAggregationItemProvider.dispose();
		if (metadataFileItemProvider != null) metadataFileItemProvider.dispose();
		if (metadataFileAggregationItemProvider != null) metadataFileAggregationItemProvider.dispose();
		if (buildSpecificationItemProvider != null) buildSpecificationItemProvider.dispose();
		if (buildConfigurationItemProvider != null) buildConfigurationItemProvider.dispose();
		if (thirdPartyComponentOrLibraryItemProvider != null) thirdPartyComponentOrLibraryItemProvider.dispose();
		if (testSpecificationItemProvider != null) testSpecificationItemProvider.dispose();
		if (releaseSpecificationItemProvider != null) releaseSpecificationItemProvider.dispose();
		if (releaseConfigurationItemProvider != null) releaseConfigurationItemProvider.dispose();
		if (deploymentSpecificationItemProvider != null) deploymentSpecificationItemProvider.dispose();
		if (runtimeInstanceItemProvider != null) runtimeInstanceItemProvider.dispose();
		if (runtimeInstanceAggregationItemProvider != null) runtimeInstanceAggregationItemProvider.dispose();
		if (unitTestCaseItemProvider != null) unitTestCaseItemProvider.dispose();
		if (acceptanceTestCaseItemProvider != null) acceptanceTestCaseItemProvider.dispose();
		if (integrationTestCaseItemProvider != null) integrationTestCaseItemProvider.dispose();
		if (unitTestCaseAggregationItemProvider != null) unitTestCaseAggregationItemProvider.dispose();
		if (acceptanceTestCaseAggregationItemProvider != null) acceptanceTestCaseAggregationItemProvider.dispose();
		if (integrationTestCaseAggregationItemProvider != null) integrationTestCaseAggregationItemProvider.dispose();
		if (staffSpecificationItemProvider != null) staffSpecificationItemProvider.dispose();
		if (personListItemProvider != null) personListItemProvider.dispose();
		if (personItemProvider != null) personItemProvider.dispose();
		if (roleListItemProvider != null) roleListItemProvider.dispose();
		if (developerItemProvider != null) developerItemProvider.dispose();
		if (buildConfiguratorItemProvider != null) buildConfiguratorItemProvider.dispose();
		if (testDeveloperItemProvider != null) testDeveloperItemProvider.dispose();
		if (testerItemProvider != null) testerItemProvider.dispose();
		if (releaseConfiguratorItemProvider != null) releaseConfiguratorItemProvider.dispose();
		if (deployerItemProvider != null) deployerItemProvider.dispose();
	}

}
